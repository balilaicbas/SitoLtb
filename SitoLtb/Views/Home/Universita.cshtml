@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model SitoLtb.ViewModels.BlogVM

<h1>Universita</h1>

<section>
    <h3>
    Ltb collabora attivamente con Polito Scacchi con cui organizza tutti i giovedì la serata universitari in Comala
    </h3>
    <h3>
        qui puoi trovare il link pre-iscrizione Comala
        </h3>
        </section>

<h2>
    Articoli
</h2>
<section class="blog-container">
    @if (Model.Posts != null && Model.Posts.Any())
    {
        var first = Model.Posts.First();
        <div class="blog-card blog-card-featured">
            <a asp-controller="Blog" asp-action="Post" asp-route-slug="@first.Url" class="blog-link">
                <div class="blog-image" style="background-image: url('@first.Image');">
                    <div class="blog-overlay">
                        <h2 class="blog-title">@first.Title</h2>
                        <p class="blog-description">@first.Description</p>
                        <span class="blog-category">@first.Categoria</span>
                    </div>
                </div>
            </a>
        </div>

        @foreach (var post in Model.Posts.Skip(1))
        {
            <div class="blog-card blog-card-regular">
                <a asp-controller="Blog" asp-action="Post" asp-route-slug="@post.Url" class="blog-link">
                    <div class="blog-image" style="background-image: url('@post.Image');">
                        <div class="blog-overlay">
                            <h2 class="blog-title">@post.Title</h2>
                            <p class="blog-description">@post.Description</p>
                            <span class="blog-category">@post.Categoria</span>
                        </div>
                    </div>
                </a>
            </div>
        }
    }

    <div class="pagination-container">
        Page @(Model?.Posts.PageCount < Model?.Posts.PageNumber ? 0 : Model?.Posts.PageNumber) of @Model?.Posts.PageCount
        @Html.PagedListPager(Model?.Posts, page => Url.Action("Index",
                 new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                 new PagedListRenderOptions
        {
            ContainerDivClasses = new List<string> { "pagination-wrapper" },
            UlElementClasses = new List<string> { "pagination" },
            LiElementClasses = new List<string> { "page-item" },
            ActiveLiElementClass = "active"
        })
    </div>
</section>
