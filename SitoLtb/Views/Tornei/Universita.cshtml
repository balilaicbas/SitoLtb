@model SitoLtb.ViewModels.BlogVM
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

<!-- Page Header-->
<header class="masthead">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>@Model.Title</h1>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            @foreach (var post in Model.Posts)
            {
                <!-- Post preview-->
                <div class="post-preview">
                    <a asp-controller="Blog" asp-action="Post" asp-route-slug="@post.Url">
                        <h2 class="post-title">@post.Title</h2>

                    </a>
                </div>
                <!-- Divider-->
                <hr class="my-4" />
            }

            Page @(Model?.Posts.PageCount < Model?.Posts.PageNumber ? 0 : Model?.Posts.PageNumber) of @Model?.Posts.PageCount
            @Html.PagedListPager(Model?.Posts, page => Url.Action("Index",
                     new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                     new PagedListRenderOptions()
            {
                ContainerDivClasses = new List<string> { "d-flex justify-content-start mb-4" },
                UlElementClasses = new List<string> { "pagination" },
                LiElementClasses = new List<string> { "btn btn-primary mx-1 text-uppercase" },
                ActiveLiElementClass = "active",
            })
        </div>
    </div>
</div>
